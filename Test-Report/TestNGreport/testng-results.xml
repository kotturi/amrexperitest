<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="13" failed="0" total="13" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="1382" started-at="2016-05-13T11:21:34Z" finished-at="2016-05-13T11:21:36Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="1382" started-at="2016-05-13T11:21:34Z" finished-at="2016-05-13T11:21:36Z">
      <class name="com.pca.test.Appflow">
        <test-method status="FAIL" signature="setUp()[pri:0, instance:com.pca.test.Appflow@3d04f4f9]" name="setUp" is-config="true" duration-ms="0" started-at="2016-05-13T16:51:34Z" finished-at="2016-05-13T16:51:34Z">
          <exception class="com.experitest.client.InternalException">
            <message>
              <![CDATA[Connectivity Exception, verify studio is open and the right port is been used]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.experitest.client.InternalException: Connectivity Exception, verify studio is open and the right port is been used
	at com.experitest.client.Client.execute(Client.java:161)
	at com.experitest.client.Client.setProjectBaseDirectory(Client.java:1586)
	at com.pca.test.Appflow.setUp(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:510)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:211)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.TestRunner.beforeRun(TestRunner.java:648)
	at org.testng.TestRunner.run(TestRunner.java:616)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.TestNG.privateMain(TestNG.java:1355)
	at org.testng.TestNG.main(TestNG.java:1324)
Caused by: org.apache.xmlrpc.XmlRpcException: Failed to read server's response: Connection refused: connect
	at org.apache.xmlrpc.client.XmlRpcStreamTransport.sendRequest(XmlRpcStreamTransport.java:161)
	at org.apache.xmlrpc.client.XmlRpcHttpTransport.sendRequest(XmlRpcHttpTransport.java:115)
	at org.apache.xmlrpc.client.XmlRpcSunHttpTransport.sendRequest(XmlRpcSunHttpTransport.java:69)
	at org.apache.xmlrpc.client.XmlRpcClientWorker.execute(XmlRpcClientWorker.java:56)
	at org.apache.xmlrpc.client.XmlRpcClient.execute(XmlRpcClient.java:167)
	at org.apache.xmlrpc.client.XmlRpcClient.execute(XmlRpcClient.java:137)
	at org.apache.xmlrpc.client.XmlRpcClient.execute(XmlRpcClient.java:126)
	at com.experitest.client.Client.execute(Client.java:158)
	... 23 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:996)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:932)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:850)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1091)
	at org.apache.xmlrpc.client.XmlRpcSunHttpTransport.writeRequest(XmlRpcSunHttpTransport.java:104)
	at org.apache.xmlrpc.client.XmlRpcStreamTransport.sendRequest(XmlRpcStreamTransport.java:151)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- com.experitest.client.InternalException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="logIn()[pri:1, instance:com.pca.test.Appflow@3d04f4f9]" name="logIn" duration-ms="0" started-at="2016-05-13T16:51:36Z" finished-at="2016-05-13T16:51:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logIn -->
        <test-method status="SKIP" signature="newIncident()[pri:2, instance:com.pca.test.Appflow@3d04f4f9]" name="newIncident" duration-ms="0" started-at="2016-05-13T16:51:36Z" finished-at="2016-05-13T16:51:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newIncident -->
        <test-method status="SKIP" signature="AddPCR()[pri:3, instance:com.pca.test.Appflow@3d04f4f9]" name="AddPCR" duration-ms="1" started-at="2016-05-13T16:51:36Z" finished-at="2016-05-13T16:51:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddPCR -->
        <test-method status="SKIP" signature="Dispatch()[pri:4, instance:com.pca.test.Appflow@3d04f4f9]" name="Dispatch" duration-ms="0" started-at="2016-05-13T16:51:36Z" finished-at="2016-05-13T16:51:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Dispatch -->
        <test-method status="SKIP" signature="DispatchIncident()[pri:5, instance:com.pca.test.Appflow@3d04f4f9]" name="DispatchIncident" duration-ms="0" started-at="2016-05-13T16:51:36Z" finished-at="2016-05-13T16:51:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DispatchIncident -->
        <test-method status="SKIP" signature="DispatchLocation()[pri:6, instance:com.pca.test.Appflow@3d04f4f9]" name="DispatchLocation" duration-ms="1" started-at="2016-05-13T16:51:36Z" finished-at="2016-05-13T16:51:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DispatchLocation -->
        <test-method status="SKIP" signature="ReasonForCall()[pri:7, instance:com.pca.test.Appflow@3d04f4f9]" name="ReasonForCall" duration-ms="0" started-at="2016-05-13T16:51:36Z" finished-at="2016-05-13T16:51:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReasonForCall -->
        <test-method status="SKIP" signature="Disposition()[pri:8, instance:com.pca.test.Appflow@3d04f4f9]" name="Disposition" duration-ms="0" started-at="2016-05-13T16:51:36Z" finished-at="2016-05-13T16:51:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Disposition -->
        <test-method status="SKIP" signature="Patient()[pri:9, instance:com.pca.test.Appflow@3d04f4f9]" name="Patient" duration-ms="0" started-at="2016-05-13T16:51:36Z" finished-at="2016-05-13T16:51:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Patient -->
        <test-method status="SKIP" signature="Assessment()[pri:10, instance:com.pca.test.Appflow@3d04f4f9]" name="Assessment" duration-ms="0" started-at="2016-05-13T16:51:36Z" finished-at="2016-05-13T16:51:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Assessment -->
        <test-method status="SKIP" signature="Park()[pri:11, instance:com.pca.test.Appflow@3d04f4f9]" name="Park" duration-ms="1" started-at="2016-05-13T16:51:36Z" finished-at="2016-05-13T16:51:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Park -->
        <test-method status="SKIP" signature="Logout()[pri:12, instance:com.pca.test.Appflow@3d04f4f9]" name="Logout" duration-ms="0" started-at="2016-05-13T16:51:36Z" finished-at="2016-05-13T16:51:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
        <test-method status="SKIP" signature="SuperlogIn()[pri:13, instance:com.pca.test.Appflow@3d04f4f9]" name="SuperlogIn" duration-ms="0" started-at="2016-05-13T16:51:36Z" finished-at="2016-05-13T16:51:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SuperlogIn -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:com.pca.test.Appflow@3d04f4f9]" name="tearDown" is-config="true" duration-ms="0" started-at="2016-05-13T16:51:36Z" finished-at="2016-05-13T16:51:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.pca.test.Appflow -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
